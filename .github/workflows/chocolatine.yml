name: Chocolatine
on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'

env:
  MIRROR_URL:
    git@github.com:EpitechPromo2027/B-DOP-200-REN-2-1-chocolatine-sebastien.bertil-souchet.git
  EXECUTABLES:
    binary

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container:  ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
      - name: Monkey
        run: |
          check.sh $(pwd) $(pwd)
          fail=0;
          while read line ; do
            error=$(echo $line | cut -d: -f4)
            type=$(echo $line | cut -d: -f3)
            types=$(echo "$type coding style error")
            lines=$(echo $line | cut -d: -f2)
            files=$(echo $line | cut -d: -f1)
            echo "::error file=$files,line=$lines,title=$types::$error";
            fail=1
          done < coding-style-reports.log
          if [ $fail -eq 1 ] ; then
            exit 1
          fi

  check_program_compilation:
    needs: check_coding_style
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
      - name: Make
        run: make
        timeout-minutes: 2
      - name: Make clean
        run: make clean
      - name: check_existing
        run: |
          for exec in $(echo ${{ env.EXECUTABLES }} | tr ',' ' '); do
            if [ ! -f $exec ] || [ ! -x $exec ] ; then
              exit 1
            fi
          done

  run_tests:
    needs: check_program_compilation
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
      - name: Make tests_run
        run: make tests_run

  push_to_mirror:
    if: ${{ github.event_name == 'push' }}
    needs: run_tests
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}